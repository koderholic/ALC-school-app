const mongoose = require('mongoose');
const Schema = mongoose.Schema;
const moment = require('moment');
const State = require('../models/state');
const generateCode = require('crypto-random-string');
const uniquefy = require('unique-string');


var studentSchema = new Schema({
    firstname : {type:String, required:true},
    lastname : {type:String, required:true},
    gender : {type:Boolean, required:true},
    date_of_birth : {type :Date , required:true},
    email : {type : String, required : true, unique : true},
    mobile : String,
    address : {type:String, required:true},
    city_id : {type: Schema.ObjectId, ref:'City', required:true},
    photo : {type : {}},
    current_level : {type: String, required:true},
    current_session : {type:String, required:true},
    course : {type: String, required:true },
    student_code : {type:String, unique : true},
    created_at : {type:Date, default:Date.now},
    updated_at : {type:Date, default:Date.now},

},{
    toObject : {virtuals : true},
    toJSON : {virtuals :true}
  });

  studentSchema.plugin(require('mongoose-paginate'));
studentSchema
.virtual('fullname')
.get(function () {
    return this.firstname +' '+this.lastname;
});

studentSchema
.virtual('dob')
.get(function () {
    return moment(this.date_of_birth).format('MMMM Do. YYYY');
});

studentSchema
.virtual('regDate')
.get(function () {
    return moment(this.created_at).format('MMMM Do. YYYY');
});

studentSchema
.virtual('updatedAt')
.get(function () {
    return moment(this.updated_at).format('MMMM Do. YYYY');
});

studentSchema
.virtual('url')
.get(function () {
    return `/students/profile/${this._id} `;
});

studentSchema
.virtual('fullAddress')
.get(function () {
    return `${this.address} ${this.city_id.name}, Lagos State`;
});



studentSchema.pre('save',function(next) {
    //Math.random().toString(36).substring(7);//this takes the random number generated by Math.random(),converts it to a string usinf base 36 as conversion base and extract 7 characters from it
    let studentCode = generateCode(8);
    this.student_code = studentCode;
    next();
});



module.exports = mongoose.model('Student',studentSchema);